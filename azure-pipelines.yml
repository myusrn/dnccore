# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'
  version: '0.1.0'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: dotnet build $(buildConfiguration)

# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/command-line?view=azure-devops&tabs=yaml
- script: date '+%a %x' # for ubuntu agent case vs /t for windows agent case
  displayName: show current day and date
- script: ls --recursive # for ubuntu agent case vs dir for windows agent case
  workingDirectory: $(Agent.BuildDirectory)
  displayName: list contents of agent build directory
- script: |
    set myenvvar=foo
    set
  displayName: set an environment variable and then display all of them

#- task: DotNetCoreCLI@2
#  displayName: dotnet test $(buildConfiguration)
#  inputs:
#    command: test
#    projects: **/*Tests/*.csproj
#    arguments: --configuration $(buildConfiguration)

# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core
# Successfully created package '/home/vsts/work/1/s/Core/bin/Release/Core.0.1.0.nupkg' is default, i.e. -o $(Build.Repository.LocalPath|Build.SourcesDirectory|System.DefaultWorkingDirectory)/Core/bin/$(buildConfiguration)
# dn pack -c Release -o d:/temp -p:PackageId=MyUsrn.Dnc.Core -p:version=0.1.0 -p:authors=myusrn -p:description="A .Net Core [Dnc] Environment Core Library. See Project Site link for more details." ./Core/Core.csproj
# dn pack -c Release -o d:/temp -p:NuspecFile=Core.nuspec ./Core/Core.csproj [ in lieu of csproj | <PropertyGroup><NuspecFile>Core.nuspec</NuspecFile></PropertyGroup> ]
# dn pack -c Release -o d:/temp ./Core/Core.csproj [ where csproj | <PropertyGroup>contains settings that in past were defined in nuspec file and can be overridden on command line</PropertyGroup> ]
# dn pack -c Release -o d:/temp -p:PackageReleaseNotes="whatever $(Build.SourceVersionMessage) says during pipeline execution" ./Core/Core.csproj
# dn pack -c Debug -o d:/temp --include-symbols --include-source -p:PackageReleaseNotes="whatever $(Build.SourceVersionMessage) says during pipeline execution" ./Core/Core.csproj
# see dotnet pack use nuspec -> https://github.com/dotnet/cli/issues/2170 and dotnet pack not including lib -> 
# https://stackoverflow.com/questions/52305975/dotnet-pack-command-along-with-nuspec-file-not-including-projects-dll
#- script: dotnet pack -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory) -p:PackageId=Myusrn.Dnc.Core -p:version=$(version) -p:authors=myusrn -p:description='A .Net Core [Dnc] Environment Core Library. See Project Site link for more details.' ./Core/Core.csproj
#- script: dotnet pack -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory) -p:NuspecFile=Core.nuspec ./Core/Core.csproj
- script: dotnet pack -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory) -p:PackageReleaseNotes='$(Build.SourceVersionMessage)' ./Core/Core.csproj
  displayName: dotnet pack $(buildConfiguration) ./Core/Core.csproj

# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/dotnet-core-cli
#- task: DotNetCoreCLI@2
#  displayName: dotnet pack $(buildConfiguration) ./Core/Core.csproj
#  inputs:
#    command: pack
#    configuration: $(buildConfiguration) 
#    packDestination: $(Build.ArtifactStagingDirectory)
#    buildProperties: NuspecFile=Core.nuspec
##   packagesToPack: **/*.csproj
#    packagesToPack: **/Core.csproj

# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/package/nuget
#- task: NuGetCommand@2
#  displayName: nuget pack $(buildConfiguration) ./Core/Core.csproj
#  inputs:
#    command: pack
#    configuration: $(buildConfiguration) 
#    packDestination: $(Build.ArtifactStagingDirectory)
#    buildProperties: NuspecFile=Core.nuspec
##   packagesToPack: **/*.csproj
#    packagesToPack: **/Core.csproj

# https://docs.microsoft.com/en-us/azure/devops/artifacts/feeds/feed-permissions
#- task: NuGetCommand@2
#  displayName: nuget push $(buildConfiguration) ./Core/Core.csproj
#  inputs:
#    command: push
#    nuGetFeedType: external
#    publishFeedCredentials: nuget-org-myusrn
#    packagesToPush: $(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg
# https://docs.microsoft.com/en-us/azure/devops/pipelines/release/variables?view=azdevops&viewFallbackFrom=vsts&tabs=batch
# release pipeline path to nuget package to publish = $(System.ArtifactsDirectory)/**/*.nupkg;!$(System.ArtifactsDirectory)/**/*.symbols.nupkg
#    versioningScheme: byEnvVar
#    versionEnvVar: version

#- task: DownloadBuildArtifacts@0
#  displayName: download build artifacts $(buildConfiguration)
#  inputs:
#    buildType: current

- task: PublishBuildArtifacts@1
  displayName: publish build artifacts $(buildConfiguration)
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
#    artifactName: drop  # default artifact[Folder]Name setting is drop
